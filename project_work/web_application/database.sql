-- Database name: restaurant_automation

-- CREATE SCHEMA restaurant_db;

-- SET SEARCH_PATH TO restaurant_db;


CREATE TABLE SUBSCRIPTION
(
    SUBSCRIPTION_TYPE_ID SERIAL PRIMARY KEY,
    MAX_MANAGER INT,
    MAX_INV_MANAGER INT,
    MAX_WAITER INT,
    MAX_KITCHEN_PERSONNEL INT,
    PRICE INT
);




CREATE TABLE RESTAURANT
(
    RESTAURANT_ID SERIAL PRIMARY KEY,
    RESTAURANT_NAME VARCHAR(20),
    TOTAL_TABLES INT,
    SUBSCRIPTION_TYPE_ID INT,
    FOREIGN KEY (SUBSCRIPTION_TYPE_ID) REFERENCES SUBSCRIPTION  (SUBSCRIPTION_TYPE_ID)
);






CREATE TABLE MANAGER
(
    USER_ID SERIAL PRIMARY KEY,
    USER_NAME VARCHAR(30),
    RESTAURANT_ID INT,
    USER_IMAGE text,
    EMAIL_ID VARCHAR(150),
    CONTACT_NO VARCHAR(20),
    CONTACT_NO_OPTIONAL VARCHAR(20),
    PASSWORD VARCHAR(50),
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID)
);



CREATE TABLE INVENTORY
(
    INVENTORY_ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT,
    ITEM_NAME VARCHAR(20),
    AVAILABLE_QTY INT,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID)
);



CREATE TABLE MENU
(
    DISH_ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT,
    DISH_NAME VARCHAR(30),
    DISH_PRICE INT,
    STATUS VARCHAR(30),
    DESCRIPTION VARCHAR(250),
    JAIN_AVAILABILITY boolean,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID)
);



CREATE TABLE ORDERED_DISHES
(
    ORDER_ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT ,
    TABLE_NO INT,
    DISH_ID INT,
    DISH_QTY INT,
    NO_OF_OCCUPANTS INT,
    TIME_STAMP TIMESTAMP,
    FOREIGN KEY (DISH_ID) REFERENCES MENU (DISH_ID),
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID)
);


CREATE TABLE REVENUE
(
    BILL_ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT,
    TABLE_NO INT,
    NO_OF_OCCUPANTS INT,
    FINAL_BILL INT,
    TIME_STAMP TIMESTAMP,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID)
);



CREATE TABLE PAID_DISHES
(
    ORDER_ID INT PRIMARY KEY,
    RESTAURANT_ID INT,
    BILL_ID INT,
    TABLE_NO INT,
    DISH_ID INT,
    DISH_QTY INT,
    NO_OF_OCCUPANTS INT,
    TIME_STAMP TIMESTAMP,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID),
    FOREIGN KEY (BILL_ID) REFERENCES REVENUE (BILL_ID),
    FOREIGN KEY (DISH_ID) REFERENCES MENU (DISH_ID)

);




CREATE TABLE USERTYPE
(
    USERTYPE_ID SERIAL PRIMARY KEY,
    USER_ROLE VARCHAR(30)
);



CREATE TABLE USERS
(
    USER_ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT,
    USER_IMAGE TEXT,
    USERTYPE_ID INT,
    USER_NAME VARCHAR(30),
    EMAIL_ID VARCHAR(150),
    CONTACT_NO VARCHAR(20),
    CONTACT_NO_OPTIONAL VARCHAR(20),
    PASSWORD VARCHAR(50),
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID),
    FOREIGN KEY (USERTYPE_ID) REFERENCES USERTYPE (USERTYPE_ID)
);


CREATE TABLE FEEDBACK
(
    FEEDBACK_ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT,
    BILL_ID INT,
    CATEGORY1 VARCHAR(30),
    CATEGORY2 VARCHAR(30),
    CATEGORY3 VARCHAR(30),
    CATEGORY4 VARCHAR(30),
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID),
    FOREIGN KEY (BILL_ID) REFERENCES REVENUE (BILL_ID)
);



CREATE TABLE ATTENDANCE
(
    ATTENDANCE_ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT,
    USER_ID INT,
    USER_NAME VARCHAR(30),
    TIME_STAMP TIMESTAMP,
    ATTENDANCE_STATUS boolean,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);



CREATE TABLE RUSH_PREDICTION
(
    ID SERIAL PRIMARY KEY,
    RESTAURANT_ID INT,
    PREDICTION_DATE DATE,
    EXPECTED_CUSTOMERS INT,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (RESTAURANT_ID)
);
